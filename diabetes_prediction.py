# -*- coding: utf-8 -*-
"""diabetes_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IuAwEdi5Tj6W4sY5cTWHdkChbMieOwcI
"""

#IMPOERT LIBRARIES
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score,confusion_matrix,classification_report,ConfusionMatrixDisplay

#MOUNT THE DATASET
from google.colab import drive
drive.mount('/content/drive')

df=pd.read_csv('/content/drive/MyDrive/diabetes.csv')

df #SHOW THE DATASET

df.head() # FIRST 5 ROWS ARE PRINTED

df.tail() #LAST 5 ROWS ARE PRINTED

df.isnull() #FINDING MISSING VALUES

df.isnull().sum() # SUM OF ALL MISSING VALUES

df.info()  # FINDING NON- NULL AND DATATYPE(Dtype)

df.describe()

# Define features (X) and target (y)
X = df.drop('Outcome', axis=1)  # Features are all columns except 'Outcome'
y = df['Outcome']  # Target is the 'Outcome' column

# Split the dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

Scaler=StandardScaler()
Scaler.fit(X_train)
X_train=Scaler.transform(X_train)
X_test=Scaler.transform(X_test)

model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

cm = confusion_matrix(y_test, y_pred)
disp = ConfusionMatrixDisplay(confusion_matrix=cm)
disp.plot(cmap=plt.cm.Blues)
plt.title("Logistic Regression - Confusion Matrix")
plt.show()

print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))



